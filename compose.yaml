services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-travel
    ports:
      - '80:80'
    depends_on:
      - backend
    networks:
      - travel-net

  # frontend:
  #   image: nginx:latest
  #   container_name: frontend-travel
  #   ports:
  #     - '8080:80'
  #   volumes:
  #     - ./frontend/dist:/usr/share/nginx/html:ro
  #     - ./default.conf:/etc/nginx/conf.d/default.conf:ro
  #   depends_on:
  #     - backend

  #   networks:
  #     - travel-net

  backend:
    build:
      context: ./backend
    container_name: backend-travel
    depends_on:
      database:
        condition: service_healthy
    environment:
      - PGURI=${PGURI}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - '3000:3000'
    networks:
      - travel-net

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
    healthcheck:
      test: 'pg_isready -U ${DB_USER}'
      interval: 2s
      retries: 5
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - travel-net

networks:
  travel-net:
    driver: bridge
